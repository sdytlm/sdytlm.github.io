---
layout: post
title: "Python: Standard Library II"
date: 2015-10-02
comments: true
categories: python
tag: python
---


### Output Formatting

* **reprlib** can provide abbreviated displays of large containers

``` python
>>> import reprlib
>>> reprlib.repr(set('supercalifragi'))
"{'a','c','d','e','f','g',...}"
```

* **pprint** offer more sophisticated control over built-in and user-defined objects.

``` python
>>> import pprint
>>> t = [[[['black', 'cyan'], 'white', ['green', 'red']], [['magenta',
...     'yellow'], 'blue']]]
...
>>> pprint.pprint(t, width=30)
[[[['black', 'cyan'],
   'white',
   ['green', 'red']],
  [['magenta', 'yellow'],
   'blue']]]
```

* **textwrap** can format paragraphs of text to fit a given screen width
``` python
>>> import textwrap
>>> doc = """The wrap() method is just like fill() except that it returns
... a list of strings instead of one big string with newlines to separate
... the wrapped lines."""
...
>>> print(textwrap.fill(doc, width=40))
The wrap() method is just like fill()
except that it returns a list of strings
instead of one big string with newlines
to separate the wrapped lines.
```
<!-- more -->


### Templating
* **string** module includes a `Template` class to allow users customize
The format uses placeholder names formed by `$` valid Python identifier

``` python
>>> from string import Template
>>> t = Template('${village}folk send $$10 to $cause.')
>>> t.substitute(village='Nottingham', cause='the ditch fund')
'Nottinghamfolk send $10 to the ditch fund.'
```
* **substitute()** method raises a `KeyError`, when a placeholder is not supplied. **safe_substitute()** will leave placeholder unchanged if data is missing.

``` python
>>> t = Template('Return the $item to $owner.')
>>> d = dict(item='unladen swallow')
>>> t.substitute(d)
....
KeyError: 'owner'

>>> t.safe_substitute(d)
'Return the unladen swallow to $owner'
```
